<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.alfresco.integration</groupId>
  <artifactId>alfresco-developer-parent</artifactId>
  <name>Alfresco Developer Parent</name>
  <packaging>pom</packaging>
  <version>1-SNAPSHOT</version>

  <prerequisites>
    <maven>3.0.3</maven>
  </prerequisites>

  <properties>
    <!-- Default Alfresco version this SDK version has been tested with:  -->
    <!--
        | alfresco.groupId can be
        | org.alfresco ==> Alfresco community 
        | org.alfresco.enterprise ==> Alfresco Enterprise
        |
        | NOTE: You can / should override these properties in you POM to select the proper version
        -->
    <alfresco.groupId>org.alfresco</alfresco.groupId>
    <alfresco.version>4.2.b-SNAPSHOT</alfresco.version>

    <!--  Values can be "alfresco" or "share". Default value is 'alfresco' assuming you are developing a repository AMP, change to share for share AMPs 
        | This impact (in AMP projects) the choice of the WAR project for embedded run
         -->
    <alfresco.client.war>alfresco</alfresco.client.war>
    <alfresco.client.war.folder>${project.build.directory}/${project.build.finalName}</alfresco.client.war.folder>

    <!-- Alfresco Repo disk storage folder (relative path) -->
    <alfresco.data.location>alf_data_dev</alfresco.data.location>
    <!-- Alfresco Repo configuration with embedded DB -->
    <alfresco.db.name>alf_dev</alfresco.db.name>
    <alfresco.db.username>alfresco</alfresco.db.username>
    <alfresco.db.password>alfresco</alfresco.db.password>
    <alfresco.db.params>MODE=PostgreSQL;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;MVCC=TRUE</alfresco.db.params>
    <alfresco.db.url>jdbc:h2:./${alfresco.data.location}/h2_data/${alfresco.db.name};${alfresco.db.params}</alfresco.db.url>
    <alfresco.db.datasource.class>org.h2.jdbcx.JdbcDataSource</alfresco.db.datasource.class>
    <!-- Share configuration -->
    <share.log.level>info</share.log.level>
    <surf.wiring.mode>development</surf.wiring.mode><!-- "production" is the other allowed value -->

    <!-- Context names used by webapps -->
    <webapp.name>${project.artifactId}</webapp.name>

    <!-- SDK Properties -->
    <!--
    Built-in multi-environment property placeholding support (also for testing); to enable it on your sub-modules
    * create app.properties.folder (default=src/main/properties/${env}) folder structure
    * place properties files in that folder with the correct name
    Both 'alfresco' and 'share' sub-modules currently use it.
    -->
    <env>local</env>
    <!--  Be default we assume to we load all properties files under ${app.properties.folder}
        | and 
        | This can be overridden your pom
     -->
    <app.properties.folder>src/main/properties/${env}</app.properties.folder>
    <app.properties.test.folder>src/test/properties/${env}</app.properties.test.folder>
    <app.properties.include>**</app.properties.include>
    <app.properties.test.include>**</app.properties.test.include>
    
    <!--  Turns on/off POM properties filtering globally. By default filtering is on. 
        | This can be overridden in your POM, but do it at your own risk
        | as it may break SDK functionalities
         -->
    <app.filtering.enabled>true</app.filtering.enabled>
    
    <!-- Maven Plugins Versions used by the SDK -->
    <maven.compiler.version>2.3.2</maven.compiler.version>
    <maven.clean.version>2.4.1</maven.clean.version>
    <maven.dependency.version>2.4</maven.dependency.version>
    <maven.resources.version>2.5</maven.resources.version>
    <maven.surefire.version>2.12.4</maven.surefire.version>
    <maven.install.version>2.3.1</maven.install.version>
    <maven.jar.version>2.4</maven.jar.version>
    <maven.war.version>2.2</maven.war.version>
    <maven.release.version>2.2.2</maven.release.version>
    <maven.buildhelper.version>1.7</maven.buildhelper.version>
    <alfresco.maven.version>0.7-SNAPSHOT</alfresco.maven.version>
    <maven.jetty.version>6.1.26</maven.jetty.version>
    <h2.version>1.3.158</h2.version>
    <h2-support.version>1.5</h2-support.version>
    
  </properties>
  
  <repositories>
      <repository>
          <id>alfresco-public</id>
          <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
      </repository>
      <repository>
          <id>alfresco-public-snapshots</id>
          <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
          <snapshots>
              <enabled>true</enabled>
              <updatePolicy>daily</updatePolicy>
          </snapshots>
      </repository>
  </repositories>

  <!-- Here we realize the connection with the Alfresco selected platform (e.g.version and edition) -->
  <dependencyManagement>
     <dependencies>
          <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco plaftorm
               (see http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies)
               NOTE: You still need to define dependencies in your POM, but you can omit version as it's enforced by this dependencyManagement.
               NOTE: It defaults to the latest version this SDK pom has been tested with, but alfresco version can/should be overridden in your project's pom   
           -->
          <dependency>
              <groupId>${alfresco.groupId}</groupId>
              <artifactId>alfresco-platform-distribution</artifactId>
              <version>${alfresco.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>
     </dependencies>
  </dependencyManagement>
  
  <build>
    <finalName>${webapp.name}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.alfresco.maven.plugin</groupId>
          <artifactId>alfresco-maven-plugin</artifactId>
          <version>${alfresco.maven.version}</version>
          <extensions>true</extensions>
          <configuration>
              <filtering>${app.filtering.enabled}</filtering>
              <snapshotToTimestamp>true</snapshotToTimestamp>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.version}</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
              <nonFilteredFileExtension>acp</nonFilteredFileExtension>
              <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
              <nonFilteredFileExtension>png</nonFilteredFileExtension>
              <nonFilteredFileExtension>gif</nonFilteredFileExtension>
              <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
              <nonFilteredFileExtension>doc</nonFilteredFileExtension>
              <nonFilteredFileExtension>xls</nonFilteredFileExtension>
              <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
              <nonFilteredFileExtension>bin</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.version}</version>
          <configuration>
            <archiveClasses>false</archiveClasses>
            <warSourceExcludes>tools/**</warSourceExcludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven.release.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.version}</version>
        </plugin>
        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>maven-jetty-plugin</artifactId>
          <version>${maven.jetty.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Cleaning Alfresco Repository storage/log folders/files -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/${alfresco.data.location}</directory>
            </fileset>
            <fileset>
              <directory>${project.basedir}</directory>
              <includes>
                <include>*.log</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
    <resources>
        <resource>
            <directory>src/main/resources</directory>
            <filtering>${app.filtering.enabled}</filtering>
        </resource>
    </resources>
    <testResources>
        <testResource>
            <directory>src/test/resources</directory>
            <filtering>${app.filtering.enabled}</filtering>
        </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
        <id>enable-properties-filtering</id>
        <activation>
            <file>
                <!-- No properties allowed here. Only hardcoded values are properly interpreted -->
                <exists>src/main/properties</exists>
            </file>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.buildhelper.version}</version>
                    <executions>
                        <execution>
                            <id>add-resource</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>add-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${app.properties.folder}</directory>
                                        <includes>
                                            <include>${app.properties.include}</include>
                                        </includes>
                                        <filtering>${app.filtering.enabled}</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
    
    <profile>
        <id>enable-test-properties-filtering</id>
        <activation>
            <file>
                <!-- No properties allowed here. Only hardcoded values are properly interpreted -->
                <exists>src/test/properties</exists>
            </file>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.buildhelper.version}</version>
                    <executions>
                        <execution>
                            <id>add-resource</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${app.properties.test.folder}</directory>
                                        <includes>
                                            <include>${app.properties.test.include}</include>
                                        </includes>
                                        <filtering>${app.filtering.enabled}</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>

    <profile>
      <id>enable-jetty</id>
      <activation>
        <file>
          <exists>jetty/jetty.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>filter-jetty-conf</id>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <phase>process-resources</phase>
                <configuration>
                  <outputDirectory>target</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.basedir}/jetty</directory>
                      <filtering>${app.filtering.enabled}</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <configuration>
              <jettyConfig>${project.build.directory}/jetty.xml</jettyConfig>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>enable-amp</id>
      <activation>
        <file>
          <exists>src/main/amp/module.properties</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.alfresco.maven.plugin</groupId>
            <artifactId>alfresco-maven-plugin</artifactId>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${maven.surefire.version}</version>
              <configuration>
                  <argLine>-Xmx1524m -XX:MaxPermSize=256m -Duser.language=en</argLine>
                  <additionalClasspathElements>
                      <!-- Adds the config directory to the test classpath for unit testing purposes -->
                      <additionalClasspathElement>${project.build.directory}/${project.artifactId}-${project.version}/config</additionalClasspathElement>
                  </additionalClasspathElements>
              </configuration>
            </plugin>
        </plugins>
      </build>
      <dependencies>
          <!-- SDK AMP Testing Dependencies -->
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
          </dependency>
          <dependency>
            <groupId>tk.skuro.alfresco</groupId>
            <artifactId>h2-support</artifactId>
            <version>${h2-support.version}</version>
            <scope>test</scope>
          </dependency>
          <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>3.0.5.RELEASE</version>
            <scope>test</scope>
          </dependency>
          <!-- Requires this explicit test dependency, for a Spring 3.0.5 bug 
          |    See https://jira.springsource.org/browse/SPR-8527 
          -->
          <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-context</artifactId>
              <version>3.0.6.RELEASE</version>
              <scope>test</scope>
          </dependency>
          <dependency>
              <groupId>${alfresco.groupId}</groupId>
              <artifactId>alfresco-repository</artifactId>
              <classifier>config</classifier>
              <scope>provided</scope>
          </dependency>
          <dependency>
              <groupId>${alfresco.groupId}</groupId>
              <artifactId>alfresco-data-model</artifactId>
              <classifier>config</classifier>
              <scope>provided</scope>
          </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>amp-to-war</id>
      <build>
        <plugins>
          <!-- Fetch and unpack Alfresco Repository / Share in the target / folder -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-alfresco</id>
                <phase>prepare-package</phase>
                <goals><goal>unpack</goal></goals>
                <configuration>
                  <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>${alfresco.groupId}</groupId>
                      <artifactId>${alfresco.client.war}</artifactId>
                      <type>war</type>
                      <version>${alfresco.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- When the AMP runs locally, src/test/webapp and src/test/resources will contain -->
          <!-- the location of the configuration files -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-alfresco-test-resources</id>
                <phase>prepare-package</phase>
                <goals><goal>copy-resources</goal></goals>
                <configuration>
                  <outputDirectory>${alfresco.client.war.folder}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/test/webapp</directory>
                    </resource>
                    <resource>
                      <directory>${project.build.testOutputDirectory}</directory>
                      <targetPath>WEB-INF/classes</targetPath>
                      <filtering>${app.filtering.enabled}</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- The current AMP artifact is installed into the Alfresco
          folder using alfresco-maven-plugin -->
          <plugin>
            <groupId>org.alfresco.maven.plugin</groupId>
            <artifactId>alfresco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>amps-to-war-overlay</id>
                <phase>package</phase>
                <goals>
                  <goal>install</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <singleAmp>${project.build.directory}/${project.build.finalName}.amp</singleAmp>
            </configuration>
          </plugin>
          <!-- If the integration-test phase is called, the integrated WAR + AMP is actually ran in Jetty -->
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>maven-jetty-plugin</artifactId>
            <executions>
                <execution>
                    <id>run-amp-to-war</id>
                    <goals>
                        <goal>run-exploded</goal>
                    </goals>
                    <phase>pre-integration-test</phase>
                </execution>
            </executions>
            <configuration>
                <webApp>${alfresco.client.war.folder}</webApp>
            </configuration>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2.version}</version>
                </dependency>
                <dependency>
                    <groupId>tk.skuro.alfresco</groupId>
                    <artifactId>h2-support</artifactId>
                    <version>${h2-support.version}</version>
                </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
