<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>alfresco-developer-parent</artifactId>
    <name>Alfresco Web Integration Parent</name>
    <packaging>pom</packaging>
    <version>1</version>
    <groupId>org.alfresco.integration</groupId>

    <properties>
        <!-- Alfresco Repo disk storage folder (relative path) -->
        <alfresco.data.location>alf_data_jetty</alfresco.data.location>

        <!-- Context names used by webapps -->
        <webapp.name>${project.artifactId}</webapp.name>

        <!--
        Built-in multi-environment property placeholding support; to enable it on your sub-module
        * create src/main/properties/${env} folder structure
        * place <anyname>.properties and define <webapp.resource.filter> with the correct name
        Both 'alfresco' and 'share' sub-modules currently use it
        -->
        <env>local</env>
        <webapp.resource.filter>alfresco-global.properties</webapp.resource.filter>
        <webapp.resource.build.folder>${project.build.outputDirectory}</webapp.resource.build.folder>
    </properties>

   <repositories>
       <repository>
           <id>alfresco-public</id>
           <url>http://maven.alfresco.com/nexus/content/groups/public</url>
       </repository>
   </repositories>

    <build>
        <finalName>${webapp.name}</finalName>

        <plugins>
            <!-- Cleaning Alfresco Repository storage/log folders/files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/${alfresco.data.location}</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}</directory>
                            <includes>
                                <include>*.log</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- All artifacts with AMP extensions are unpacked
            using a WAR layout on an empty folder using mmt-maven-plugin -->
            <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>mmt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>amps-to-war-overlay</id>
                        <phase>package</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>enable-filtering</id>
            <activation>
                <file>
                    <exists>src/main/properties</exists>
                </file>
            </activation>
            <properties>
                <webapp.resource.filter.folder>src/main/properties/${env}</webapp.resource.filter.folder>
                <webapp.testresource.filter.folder>src/main/properties/${env}</webapp.testresource.filter.folder>
            </properties>
            <build>
                <filters>
                    <filter>${webapp.resource.filter.folder}/${webapp.resource.filter}</filter>
                </filters>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-filtered-resources</id>
                                    <goals><goal>copy-resources</goal></goals>
                                    <phase>process-resources</phase>
                                    <configuration>
                                        <outputDirectory>${webapp.resource.build.folder}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${webapp.resource.filter.folder}</directory>
                                                <includes>
                                                    <include>${webapp.resource.filter}</include>
                                                </includes>
                                                <filtering>true</filtering>
                                                <targetPath>${webapp.resource.build.folder}</targetPath>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>${webapp.testresource.filter.folder}</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>
        <profile>
            <id>enable-embedded-jetty</id>
            <activation>
                <file>
                    <exists>jetty</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>filter-jetty-conf</id>
                                <goals><goal>copy-resources</goal></goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <outputDirectory>target</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/jetty</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <configuration>
                            <jettyConfig>${project.build.directory}/jetty.xml</jettyConfig>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>tk.skuro.alfresco</groupId>
                                <artifactId>h2-support</artifactId>
                                <version>${h2-support.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>enable-amp-packaging</id>
            <activation>
                <file>
                    <exists>module.properties</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.alfresco.maven.plugin</groupId>
                        <artifactId>mmt-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>add-resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
